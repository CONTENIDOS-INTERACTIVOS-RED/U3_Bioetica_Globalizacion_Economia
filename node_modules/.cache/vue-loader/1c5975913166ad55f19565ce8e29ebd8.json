{"remainingRequest":"/home/runner/work/U3_Bioetica_Globalizacion_Economia/U3_Bioetica_Globalizacion_Economia/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U3_Bioetica_Globalizacion_Economia/U3_Bioetica_Globalizacion_Economia/node_modules/pug-plain-loader/index.js!/home/runner/work/U3_Bioetica_Globalizacion_Economia/U3_Bioetica_Globalizacion_Economia/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U3_Bioetica_Globalizacion_Economia/U3_Bioetica_Globalizacion_Economia/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U3_Bioetica_Globalizacion_Economia/U3_Bioetica_Globalizacion_Economia/src/views/curso/Tema1.vue?vue&type=template&id=6d44c7f2&lang=pug&","dependencies":[{"path":"/home/runner/work/U3_Bioetica_Globalizacion_Economia/U3_Bioetica_Globalizacion_Economia/src/views/curso/Tema1.vue","mtime":1753217879780},{"path":"/home/runner/work/U3_Bioetica_Globalizacion_Economia/U3_Bioetica_Globalizacion_Economia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Bioetica_Globalizacion_Economia/U3_Bioetica_Globalizacion_Economia/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U3_Bioetica_Globalizacion_Economia/U3_Bioetica_Globalizacion_Economia/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U3_Bioetica_Globalizacion_Economia/U3_Bioetica_Globalizacion_Economia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Bioetica_Globalizacion_Economia/U3_Bioetica_Globalizacion_Economia/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjdXJzby1tYWluLWNvbnRhaW5lciBwYi0zIn0sW19jKCdCYW5uZXJJbnRlcm5vJyx7YXR0cnM6eyJzdWJUaXR1bG8iOicxLiBCaW/DqXRpY2EgYXBsaWNhZGEgYWwgZGVzYXJyb2xsbyBlY29uw7NtaWNvIHNvc3RlbmlibGUnfX0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29udGFpbmVyIHRhcmpldGEgdGFyamV0YS0tYmxhbmNhIHAtNCBwLW1kLTUgb3ZlcmZsb3ctaGlkZGVuIn0sW192bS5fbSgwKSxfdm0uX20oMSksX3ZtLl9tKDIpLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiU2Vnw7puIHNlIGhhIGV2aWRlbmNpYWRvLCBsYSBzb3N0ZW5pYmlsaWRhZCBhYmFyY2EgdHJlcyBkaW1lbnNpb25lcyBmdW5kYW1lbnRhbGVzOiAiKV0pLF9jKCdoMycse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiRGltZW5zacOzbiBlY29uw7NtaWNhIildKSxfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiSW1wbGljYSBsYSBjcmVhY2nDs24gZGUgcmlxdWV6YSB5IGVtcGxlbywgZGUgbWFuZXJhIHF1ZSBubyBjb21wcm9tZXRhIGxvcyByZWN1cnNvcyBuYXR1cmFsZXMgYSBsYXJnbyBwbGF6by4gU2UgZW5mb2NhIGVuIHByw6FjdGljYXMgZGUgcHJvZHVjY2nDs24geSBjb25zdW1vIHJlc3BvbnNhYmxlcywgcXVlIGFzZWd1cmVuIGxhIHZpYWJpbGlkYWQgZWNvbsOzbWljYSBlbiBlbCB0aWVtcG8uIildKSxfdm0uX20oMyksX2MoJ2gzJyx7YXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJEaW1lbnNpw7NuIHNvY2lhbCIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJCdXNjYSBtZWpvcmFyIGxhIGNhbGlkYWQgZGUgdmlkYSBkZSBsYXMgcGVyc29uYXMsIHByb21vdmllbmRvIGxhIGlndWFsZGFkLCBlbCBhY2Nlc28gYSBzZXJ2aWNpb3MgYsOhc2ljb3MsIHkgbGEganVzdGljaWEgc29jaWFsLiBTZSBwcmVvY3VwYSBwb3IgcmVkdWNpciBsYSBwb2JyZXphLCBwcm90ZWdlciBsb3MgZGVyZWNob3MgaHVtYW5vcyB5IGZvbWVudGFyIGxhIGNvaGVzacOzbiBzb2NpYWwuIFNlIG9yaWVudGEgYSBnYXJhbnRpemFyIHF1ZSBsYXMgZ2VuZXJhY2lvbmVzIGZ1dHVyYXMgZGlzZnJ1dGVuIGRlIGxhcyBtaXNtYXMgbyBtYXlvcmVzIG9wb3J0dW5pZGFkZXMgcXVlIGxhcyBhY3R1YWxlcywgcHJvbW92aWVuZG8gdW5hIHNvY2llZGFkIGluY2x1c2l2YSB5IGVxdWl0YXRpdmEuIEVzdG8gaW1wbGljYSBlc3RhYmxlY2VyIGNvbmRpY2lvbmVzIHF1ZSBwZXJtaXRhbiBtZWpvcmFyIGxhIGVkdWNhY2nDs24sIGVsIGNvbm9jaW1pZW50byB5IGxhIGlubm92YWNpw7NuLCBlbGVtZW50b3MgY2xhdmVzIHBhcmEgdW4gZGVzYXJyb2xsbyBlY29uw7NtaWNvLCBlcXVpbGlicmFkbyB5IGp1c3RvLiIpXSksX3ZtLl9tKDQpLF9jKCdoMycse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiRGltZW5zacOzbiBhbWJpZW50YWwiKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiU2UgY2VudHJhIGVuIGxhIHByb3RlY2Npw7NuIGRlIGxvcyBlY29zaXN0ZW1hcywgbGEgcmVkdWNjacOzbiBkZSBsYSBjb250YW1pbmFjacOzbiwgeSBlbCB1c28gc29zdGVuaWJsZSBkZSBsb3MgcmVjdXJzb3MgbmF0dXJhbGVzLiBFc3RhIGRpbWVuc2nDs24gYXNlZ3VyYSBxdWUgZWwgY3JlY2ltaWVudG8gZWNvbsOzbWljbyBubyBkZWdyYWRlIGxvcyBlbnRvcm5vcyBuYXR1cmFsZXMsIGRlIG1hbmVyYSBpcnJldmVyc2libGUuICIpXSksX3ZtLl9tKDUpLF9jKCdoMycse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiRXN0cmF0ZWdpYXMgcGFyYSBlbCBkZXNhcnJvbGxvIGVjb27Ds21pY28gc29zdGVuaWJsZSIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJFeGlzdGVuIGRpdmVyc2FzIGVzdHJhdGVnaWFzIHF1ZSBwdWVkZW4gaW1wbGVtZW50YXJzZSBwYXJhIGZvbWVudGFyIHVuIGRlc2Fycm9sbG8gZWNvbsOzbWljbyBzb3N0ZW5pYmxlLiBBbGd1bmFzIGRlIGVsbGFzIGluY2x1eWVuOiIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgYWxpZ24taXRlbXMtY2VudGVyIG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNyJ9LFtfYygnQWNvcmRpb25BJyx7YXR0cnM6eyJ0aXBvIjoiYiJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJkaXYiLGF0dHJzOnsidGl0dWxvIjoiRWNvbm9tw61hIGNpcmN1bGFyIn19LFtfYygncCcsW192bS5fdigiRW4gbHVnYXIgZGUgdW4gbW9kZWxvIGxpbmVhbCBkZSBcInByb2R1Y2lyLCB1c2FyIHkgZGVzZWNoYXJcIiwgbGEgZWNvbm9tw61hIGNpcmN1bGFyIGJ1c2NhIHJldXRpbGl6YXIgeSByZWNpY2xhciBwcm9kdWN0b3MgeSBtYXRlcmlhbGVzLCByZWR1Y2llbmRvIGVsIGRlc3BlcmRpY2lvLiBFamVtcGxvLiBQcm9ncmFtYXMgZGUgcmVjaWNsYWplIHkgcmVkaXNlw7FvIGRlIHByb2R1Y3RvcyBwYXJhIGZhY2lsaXRhciBzdSByZXV0aWxpemFjacOzbi4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJkaXYiLGF0dHJzOnsidGl0dWxvIjoiRW5lcmfDrWFzIHJlbm92YWJsZXMifX0sW19jKCdwJyxbX3ZtLl92KCJGb21lbnRhciBlbCB1c28gZGUgZnVlbnRlcyBkZSBlbmVyZ8OtYSBsaW1waWEgY29tbyBsYSBzb2xhciwgZcOzbGljYSBvIGhpZHJvZWzDqWN0cmljYSwgcGFyYSByZWR1Y2lyIGxhIGRlcGVuZGVuY2lhIGRlIGNvbWJ1c3RpYmxlcyBmw7NzaWxlcyB5IGRpc21pbnVpciBsYXMgZW1pc2lvbmVzIGRlIGNhcmJvbm8uIEVqZW1wbG8uIEluc3RhbGFjacOzbiBkZSBwYXJxdWVzIGXDs2xpY29zIHkgcGFuZWxlcyBzb2xhcmVzIGVuIMOhcmVhcyBpbmR1c3RyaWFsZXMgeSByZXNpZGVuY2lhbGVzLiIpXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImRpdiIsYXR0cnM6eyJ0aXR1bG8iOiJQcsOhY3RpY2FzIGRlIGFncmljdWx0dXJhIHNvc3RlbmlibGUifX0sW19jKCdwJyxbX3ZtLl92KCJJbmNvcnBvcmFyIHTDqWNuaWNhcyBhZ3LDrWNvbGFzIHF1ZSBtYW50ZW5nYW4gbGEgZmVydGlsaWRhZCBkZWwgc3VlbG8geSByZWR1emNhbiBlbCB1c28gZGUgcXXDrW1pY29zIHBlcmp1ZGljaWFsZXMuIEVqZW1wbG8uIEFncmljdWx0dXJhIG9yZ8OhbmljYSB5IHNpc3RlbWFzIGRlIHJpZWdvIGVmaWNpZW50ZXMsIHBhcmEgbWluaW1pemFyIGVsIGNvbnN1bW8gZGUgYWd1YS4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJkaXYiLGF0dHJzOnsidGl0dWxvIjoiRWR1Y2FjacOzbiB5IGNvbmNpZW50aXphY2nDs24ifX0sW19jKCdwJyxbX3ZtLl92KCJMYSBlZHVjYWNpw7NuIGVzIGNsYXZlIHBhcmEgZm9tZW50YXIgdW5hIGN1bHR1cmEgZGUgc29zdGVuaWJpbGlkYWQuIEVqZW1wbG8uIEVzdG8gc2UgbG9ncmEgYSB0cmF2w6lzIGRlIHByb2dyYW1hcyBlZHVjYXRpdm9zIHkgY2FtcGHDsWFzIGRlIHNlbnNpYmlsaXphY2nDs24uIildKV0pXSldLDEpLF92bS5fbSg2KV0pLF9jKCdoMycse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiRGVzYWbDrW9zIGRlbCBkZXNhcnJvbGxvIGVjb27Ds21pY28gc29zdGVuaWJsZSIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJBIHBlc2FyIGRlIGxvcyBhdmFuY2VzLCBlbCBkZXNhcnJvbGxvIGVjb27Ds21pY28gc29zdGVuaWJsZSBlbmZyZW50YSB2YXJpb3MgZGVzYWbDrW9zOiIpXSksX3ZtLl9tKDcpLF92bS5fbSg4KSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIkVuIGVsIGNvbnRleHRvIGRlbCBkZXNhcnJvbGxvIGVjb27Ds21pY28gc29zdGVuaWJsZSwgZXMgZXNlbmNpYWwgcmVjb25vY2VyIHF1ZSBhc3BlY3RvcyBjb21vIGxhIHByb2R1Y3RpdmlkYWQsIGxhIGNhbGlkYWQsIGxhIHNlZ3VyaWRhZCB5IGVsIG1lZGlvYW1iaWVudGUsIG5vIGRlYmVuIG1hbmVqYXJzZSBkZSBtYW5lcmEgc2VwYXJhZGEuIFNlZ8O6biBGZXJuw6FuZGV6IEdhcmPDrWEgKDIwMTMpLCBtdWNoYXMgdmVjZXMgbGFzIGVtcHJlc2FzIHNpZ3VlbiBnZXN0aW9uYW5kbyBlc3RvcyBlbGVtZW50b3MgZGUgZm9ybWEgZGlzb2NpYWRhLCBsbyBxdWUgcHVlZGUgZ2VuZXJhciBjb25mbGljdG9zIGlubmVjZXNhcmlvcywgbXVsdGlwbGljYW5kbyBlc2Z1ZXJ6b3MgeSBhdW1lbnRhbmRvIGxvcyBjb3N0b3MuIEVuIGNhbWJpbywgaW50ZWdyYXIgZXN0b3MgYXNwZWN0b3MgcGVybWl0ZSBsb2dyYXIgc2luZXJnaWFzIHF1ZSBmYXZvcmVjZW4sIHRhbnRvIGVsIGRlc2VtcGXDsW8gZW1wcmVzYXJpYWwgY29tbyBsYSBzb3N0ZW5pYmlsaWRhZCBkZWwgZW50b3Juby4iKV0pLF92bS5fbSg5KSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIkVsIGRlc2Fycm9sbG8gZWNvbsOzbWljbyBpbXBsaWNhIGVsIGNyZWNpbWllbnRvIHkgbGEgZXhwYW5zacOzbiBkZSBsYXMgYWN0aXZpZGFkZXMgcHJvZHVjdGl2YXMgbG8gY3VhbCwgY29uIGZyZWN1ZW5jaWEsIHJlcXVpZXJlIGxhIGV4cGxvdGFjacOzbiBkZSByZWN1cnNvcyBuYXR1cmFsZXMgKGFndWEsIG1pbmVyYWxlcywgZW5lcmfDrWEsIGJpb2RpdmVyc2lkYWQsIGVudHJlIG90cm9zKS4gU2luIGVtYmFyZ28sIGVsIHVzbyBkZSBlc3RvcyByZWN1cnNvcyBkZWJlIHNlciByZXNwb25zYWJsZSwgcGFyYSBldml0YXIgZGHDsW9zIGEgbGFyZ28gcGxhem8gcXVlIHB1ZWRhbiBjb21wcm9tZXRlciwgdGFudG8gZWwgYmllbmVzdGFyIGRlIGxhcyBnZW5lcmFjaW9uZXMgZnV0dXJhcyBjb21vIGVsIGVxdWlsaWJyaW8gZGUgbG9zIGVjb3Npc3RlbWFzLiIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJDb25vemNhbW9zIGxvcyBwcmluY2lwaW9zIGJpb8OpdGljb3MgYXBsaWNhZG9zOiIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgYWxpZ24taXRlbXMtY2VudGVyIG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNyJ9LFtfYygnQWNvcmRpb25BJyx7YXR0cnM6eyJ0aXBvIjoiYiJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJkaXYiLGF0dHJzOnsidGl0dWxvIjoiQmVuZWZpY2VuY2lhIn19LFtfYygncCcsW192bS5fdigiRXN0ZSBwcmluY2lwaW8gb2JsaWdhIGEgcHJvbW92ZXIgZWwgYmllbmVzdGFyIGdlbmVyYWwsIGxvIGN1YWwgaW1wbGljYSBxdWUgbG9zIHJlY3Vyc29zIG5hdHVyYWxlcyBkZWJlbiB1dGlsaXphcnNlIGRlIG1hbmVyYSBxdWUgYmVuZWZpY2llbiBhIGxhIGh1bWFuaWRhZCwgc2luIGNhdXNhciBkYcOxb3MgaW5uZWNlc2FyaW9zIGFsIG1lZGlvIGFtYmllbnRlLiBFbiBlbCBjYXNvIGRlbCB1c28gZGUgcmVjdXJzb3MgbmF0dXJhbGVzLCBlc3RvIHBvZHLDrWEgaW5jbHVpciBwcsOhY3RpY2FzIHNvc3RlbmlibGVzIGNvbW8gbGEgYWdyaWN1bHR1cmEgZWNvbMOzZ2ljYSwgZWwgdXNvIGRlIGVuZXJnw61hcyByZW5vdmFibGVzLCBsYSBlZmljaWVuY2lhIGVuIGVsIGNvbnN1bW8gZGUgYWd1YSB5IGxhIHJlZm9yZXN0YWNpw7NuLiIpXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImRpdiIsYXR0cnM6eyJ0aXR1bG8iOiJObyBtYWxlZmljZW5jaWEifX0sW19jKCdwJyxbX3ZtLl92KCJTZSByZWZpZXJlIGEgZXZpdGFyIGVsIGRhw7FvIHksIGVuIGVsIGNvbnRleHRvIGRlIGxvcyByZWN1cnNvcyBuYXR1cmFsZXMsIHNlIHRyYWR1Y2UgZW4gcHJldmVuaXIgbGEgc29icmVleHBsb3RhY2nDs24geSBsYSBkZWdyYWRhY2nDs24gZGUgbG9zIGVjb3Npc3RlbWFzLiBFbCBtYWwgbWFuZWpvIGRlIGxvcyByZWN1cnNvcyBwdWVkZSBnZW5lcmFyIGVmZWN0b3Mgbm9jaXZvcyBubyBzb2xvIGVuIGVsIGFtYmllbnRlLCBzaW5vIHRhbWJpw6luIGVuIGxhcyBjb211bmlkYWRlcyBodW1hbmFzIHF1ZSBkZXBlbmRlbiBkZSBlbGxvcy4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJkaXYiLGF0dHJzOnsidGl0dWxvIjoiSnVzdGljaWEifX0sW19jKCdwJyxbX3ZtLl92KCJFbiBlbCBtYXJjbyBkZWwgdXNvIGRlIGxvcyByZWN1cnNvcyBuYXR1cmFsZXMsIGVzdGUgcHJpbmNpcGlvIHRpZW5lIHF1ZSB2ZXIgY29uIGxhIGRpc3RyaWJ1Y2nDs24gZXF1aXRhdGl2YSBkZSBsb3MgYmVuZWZpY2lvcyB5IGNvc3RvcyBkZXJpdmFkb3MgZGUgc3UgZXhwbG90YWNpw7NuLiBQb3IgZWplbXBsbywgZXMgbmVjZXNhcmlvIGFzZWd1cmFyIHF1ZSBsYXMgY29tdW5pZGFkZXMgbG9jYWxlcyBxdWUgZGVwZW5kZW4gZGUgZXN0b3MgcmVjdXJzb3MsIG5vIHNlYW4gZXhwbG90YWRhcyBuaSBzZSBsZXMgcHJpdmUgZGUgc3UgYWNjZXNvIGEgZWxsb3MuIildKV0pXSldLDEpLF92bS5fbSgxMCldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBtYi01IGp1c3RpZnktY29udGVudC1jZW50ZXIgbWItNCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy0xMSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLTIifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1jZW50ZXIifSxbX3ZtLl9tKDExKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZyJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InBzLTQgcGUtNSBweS00In0sW19jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLXVwIn19LFtfdm0uX3YoIlBhcmEgY29ub2NlciBzb2JyZSBlbCBpbXBhY3RvIGRlIGxvcyBwcmluY2lwaW9zIGRlIGp1c3RpY2lhLCBhdXRvbm9tw61hIHkgYmVuZWZpY2VuY2lhIGVuIGxhIHNvc3RlbmliaWxpZGFkLCBsbyBpbnZpdGFtb3MgYSBlc2N1Y2hhciBlbCBzaWd1aWVudGUgcG9kY2FzdC4iKV0pLF9jKCdUYXJqZXRhQXVkaW8nLHtzdGF0aWNDbGFzczoiY29sb3ItcHJpbWFyaW8gYmctY29sb3Itd2hpdGUgbWItMyIsYXR0cnM6eyJ0ZXh0byI6IkltcGFjdG8gZGUgbG9zIHByaW5jaXBpb3MgZGUganVzdGljaWEsIGF1dG9ub23DrWEgeSBiZW5lZmljZW5jaWEgZW4gbGEgc29zdGVuaWJpbGlkYWQiLCJ0aWVtcG8iOiIiLCJhdWRpbyI6cmVxdWlyZSgnLi4vLi4vYXNzZXRzL2N1cnNvL3BvZGNhc3QvcG9kY2FzdDEubXAzJyl9fSldLDEpXSldKV0pXSldKSxfdm0uX20oMTIpLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiVmFyaW9zIHBhw61zZXMgeSBzZWN0b3JlcyBlc3TDoW4gaW1wbGVtZW50YW5kbyBwcsOhY3RpY2FzIGlubm92YWRvcmFzIHF1ZSBwcm9tdWV2ZW4gbGEgc29zdGVuaWJpbGlkYWQgZW4gZGlmZXJlbnRlcyDDoXJlYXMuIEEgY29udGludWFjacOzbiwgc2UgcHJlc2VudGFuIGVqZW1wbG9zIGV4aXRvc29zIGVuIMOhcmVhcyBjbGF2ZXMgY29tbyBlbmVyZ8OtYXMgcmVub3ZhYmxlcywgcHJveWVjdG9zIHNvbGFyZXMsIHR1cmlzbW8gc29zdGVuaWJsZSwgYWdyaWN1bHR1cmEgeSB0ZWNub2xvZ8OtYSwgY29uIHVuIGVuZm9xdWUgZW4gY8OzbW8gZXN0YXMgaW5pY2lhdGl2YXMgY29udHJpYnV5ZW4gYWwgYmllbmVzdGFyIGVjb27Ds21pY28geSBzb2NpYWwuIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWZ1bGwtd2lkdGggYmctY29sb3ItMyJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InB4LTQgcC1tZC01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIgYWxpZ24taXRlbXMtY2VudGVyIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTcgb3JkZXItMiJ9LFtfYygnaDInLHtzdGF0aWNDbGFzczoibWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZsaXAtdXAifX0sW192bS5fdigiQ2Fzb3MgZGUgw6l4aXRvIildKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1yaWdodCJ9fSxbX3ZtLl92KCJFbCBkZXNhcnJvbGxvIGVjb27Ds21pY28gc29zdGVuaWJsZSBkZW11ZXN0cmEgcXVlIGVzIHBvc2libGUgYWxjYW56YXIgZWwgY3JlY2ltaWVudG8gZWNvbsOzbWljbyBzaW4gY29tcHJvbWV0ZXIgZWwgbWVkaW8gYW1iaWVudGUgbmkgZWwgYmllbmVzdGFyIHNvY2lhbC4gRW4gZWwgUERGIENhc29zIGRlIMOpeGl0bywgc2UgZXhwbG9yYXLDoW4gZWplbXBsb3MgZGVzdGFjYWRvcyBxdWUgaWx1c3RyYW4gY8OzbW8gZGlzdGludGFzIGluaWNpYXRpdmFzIGFscmVkZWRvciBkZWwgbXVuZG8gZXN0w6FuIGxvZ3JhbmRvIGVzdGUgZXF1aWxpYnJpby4gRW50cmUgbG9zIGNhc29zLCBzZSBhbmFsaXphcsOhIGPDs21vIERpbmFtYXJjYSBsaWRlcmEgZW4gZWwgdXNvIGRlIGVuZXJnw61hcyByZW5vdmFibGVzIGEgdHJhdsOpcyBkZSBzdSB0cmFuc2Zvcm1hY2nDs24gaGFjaWEgbGEgZW5lcmfDrWEgZcOzbGljYSwgbGEgZXhwYW5zacOzbiBkZSBwcm95ZWN0b3MgZGUgZW5lcmfDrWEgc29sYXIgYSBuaXZlbCBnbG9iYWwgeSBlbiBDb2xvbWJpYSwgZWwgaW1wYWN0byBkZWwgdHVyaXNtbyBzb3N0ZW5pYmxlIGVuIGVjb3Npc3RlbWFzIGxvY2FsZXMsIGxvcyBhdmFuY2VzIGVuIGFncmljdWx0dXJhIHNvc3RlbmlibGUgeSBsYXMgaW5ub3ZhY2lvbmVzIGRlIGVtcHJlc2FzIHRlY25vbMOzZ2ljYXMgdmVyZGVzIGNvbW8gVGVzbGEsIEdvb2dsZSB5IE1pY3Jvc29mdC4gRXN0b3MgZWplbXBsb3MgYnJpbmRhbiB1bmEgdmlzacOzbiBpbnRlZ3JhbCBkZSBjw7NtbyBsYSBzb3N0ZW5pYmlsaWRhZCBwdWVkZSBpbnRlZ3JhcnNlIGRlIG1hbmVyYSBlZmVjdGl2YSBlbiBkaXZlcnNvcyBzZWN0b3JlcyBlY29uw7NtaWNvcy4iKV0pLF9jKCdhJyx7c3RhdGljQ2xhc3M6ImFuZXhvIG1iLTQgYmctd2hpdGUgdy1maXQiLGF0dHJzOnsiaHJlZiI6X3ZtLm9idGVuZXJMaW5rKCcvZG93bmxvYWRzL0FuZXhvXzEucGRmJyksInRhcmdldCI6Il9ibGFuayIsImRhdGEtYW9zIjoiZmxpcC11cCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJhbmV4b19faWNvbm8iLHN0eWxlOih7J2JhY2tncm91bmQtY29sb3InOiAnI0ZDREZEQid9KX0sW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvdGVtcGxhdGUvaWNvbm8tcGRmLnN2ZyIpfX0pXSksX3ZtLl9tKDEzKV0pXSksX3ZtLl9tKDE0KV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWZ1bGwtd2lkdGggYm9yZGVyLXRvcCBjb2xvci1wcmltYXJpbyJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InAtNCBwLW1kLTUifSxbX2MoJ2gyJyx7YXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJNQVRFUklBTCBDT01QTEVNRU5UQVJJTyIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgbWF0ZXJpYWwtY29tcGxlbWVudGFyaW8ifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtMTIgY29sLW1kLTYgY29sLWxnLTcifSxbX2MoJ3AnLFtfdm0uX3YoIkxvcyBpbnZpdGFtb3MgYSBleHBsb3JhciBlbCBtYXRlcmlhbCBjb21wbGVtZW50YXJpbyBkZSBlc3RlIGN1cnNvLCBlbiBlc3RhIHNlY2Npw7NuIGVuY29udHJhcsOhIHJlY3Vyc29zIHF1ZSBsZSBwZXJtaXRpcsOhbiBwcm9mdW5kaXphciB5IGVucmlxdWVjZXIgc3UgYXByZW5kaXphamUgZW4gbG9zIHRlbWFzIHRyYXRhZG9zIGVuIGVzdGEgdW5pZGFkLiIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoiZC1mbGV4IG15LTQifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtZS0zIixzdHlsZTooeydtYXgtd2lkdGgnOicxNnB4J30pLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZyIpfX0pLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly93d3cucmV2aXN0YXNpY2UuY29tL2luZGV4LnBocC9DSUNFL2FydGljbGUvZG93bmxvYWQvNjAzMS82MDMxIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJEZSBDYXN0cm8gRW1pbGlvIENlcmTDoSwgRi4gSi4gQS4gTC4gTS4gKHMvZikuIExhcyBlbmVyZ8OtYXMgcmVub3ZhYmxlcyBlbiBlbCDDoW1iaXRvIGludGVybmFjaW9uYWwuIFJldmlzdGFzaWNlLmNvbS4gIildKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6ImQtZmxleCBteS00In0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibWUtMyIsc3R5bGU6KHsnbWF4LXdpZHRoJzonMTZweCd9KSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmciKX19KSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vbmF0dXJhLm9yZy5jby9xdWUtZXMtYWdyaWN1bHR1cmEtc29zdGVuaWJsZS15LWNvbW8tc2UtcmVsYWNpb25hLWNvbi1lbC1tb25pdG9yZW8tY2xpbWF0aWNvLyIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiTmF0dXJhLCBGLiAoMjAyNCwganVuaW8gNikuIMK/UXXDqSBlcyBhZ3JpY3VsdHVyYSBzb3N0ZW5pYmxlIHkgY8OzbW8gc2UgcmVsYWNpb25hIGNvbiBlbCBtb25pdG9yZW8gY2xpbcOhdGljbz8gRnVuZGFjacOzbiBOYXR1cmEgQ29sb21iaWEuICIpXSldKSxfYygncCcse3N0YXRpY0NsYXNzOiJkLWZsZXggbXktNCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1lLTMiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3d3dy5yZXZpc3RhZWNvc2lzdGVtYXMubmV0L2luZGV4LnBocC9lY29zaXN0ZW1hcy9hcnRpY2xlL3ZpZXcvNjE0IiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJBcnRhcmF6LCBNLiAoMjAwMikuIFRlb3LDrWEgZGUgbGFzIHRyZXMgZGltZW5zaW9uZXMgZGUgZGVzYXJyb2xsbyBzb3N0ZW5pYmxlOiAuIEVjb3Npc3RlbWFzLCAxMSgyKS4gIildKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6ImQtZmxleCBteS00In0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibWUtMyIsc3R5bGU6KHsnbWF4LXdpZHRoJzonMTZweCd9KSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmciKX19KSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vZWxpYnJvLm5ldC9lcy9lcmVhZGVyL3RlY25vbG9naWNhZGVsb3JpZW50ZS82MjMzMj9wYWdlPTE3MCIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiRmVybsOhbmRleiBHYXJjw61hLCBSLiAoMjAxMykuIExhIGRpbWVuc2nDs24gZWNvbsOzbWljYSBkZWwgZGVzYXJyb2xsbyBzb3N0ZW5pYmxlOiAoIGVkLikuIEVDVS4iKV0pXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoiZC1mbGV4IG15LTQifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtZS0zIixzdHlsZTooeydtYXgtd2lkdGgnOicxNnB4J30pLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZyIpfX0pLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9lbGlicm8ubmV0L2VzL2xjL3RlY25vbG9naWNhZGVsb3JpZW50ZS90aXR1bG9zLzI3NDYxMSIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiRGUgQ2FzdHJvIEVtaWxpbyBDZXJkw6EsIEYuIEouIEEuIEwuIE0uIChzL2YpLiBMYXMgZW5lcmfDrWFzIHJlbm92YWJsZXMgZW4gZWwgw6FtYml0byBpbnRlcm5hY2lvbmFsLiBSZXZpc3Rhc2ljZS5jb20uICIpXSldKSxfYygncCcse3N0YXRpY0NsYXNzOiJkLWZsZXggbXktNCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1lLTMiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL3RlbXBsYXRlL2Jvb2suc3ZnIil9fSksX2MoJ3NwYW4nLFtfdm0uX3YoIkNlcmRvcyBjcmlvbGxvcyBjb2xvbWJpYW5vcyB5IGFncmljdWx0dXJhIHNvc3RlbmlibGUuICIpXSldKSxfYygncCcse3N0YXRpY0NsYXNzOiJkLWZsZXggbXktNCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1lLTMiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL3RlbXBsYXRlL2Jvb2suc3ZnIil9fSksX2MoJ3NwYW4nLFtfdm0uX3YoIkRlIEphbmVpcm8sIFIuICgxOTkyKS4gTGEgZGVjbGFyYWNpw7NuIGRlbCBSw61vIHNvYnJlIGVsIE1lZGlvIEFtYmllbnRlIHkgZWwgRGVzYXJyb2xsby4gUsOtbyBkZSBKYW5laXJvIFJlcMO6YmxpY2EgRmVkZXJhdGl2YSBkZWwgQnJhc2lsLiwgYXByb2JhZGEgZW4gRXN0b2NvbG1vIGVsLCAxNi4iKV0pXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoiZC1mbGV4IG15LTQifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtZS0zIixzdHlsZTooeydtYXgtd2lkdGgnOicxNnB4J30pLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy90ZW1wbGF0ZS9pY29uby15dC5zdmciKX19KSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8veW91dHUuYmUvaGxwVFpiaWthenc/c2k9WEdCSkVWM0wtOXBUYS1HYyIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiRW1wcmVzYXMgaW5ub3ZhZG9yYXMuIildKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6ImQtZmxleCBteS00In0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibWUtMyIsc3R5bGU6KHsnbWF4LXdpZHRoJzonMTZweCd9KSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvdGVtcGxhdGUvaWNvbm8teXQuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3lvdXR1LmJlL0toNWxwcXhUdzVNP3NpPU5OMXFCMTRUYkdOOVR4aVUiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIkdvb2dsZSwgTWljcm9zb2Z0IHkgdGVzbGEsIGVsIHZlcmRhZGVybyByZXkgZGUgbGEgaW50ZWxpZ2VuY2lhIGFydGlmaWNpYWwuIildKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6ImQtZmxleCBteS00In0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibWUtMyIsc3R5bGU6KHsnbWF4LXdpZHRoJzonMTZweCd9KSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvdGVtcGxhdGUvaWNvbm8teXQuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3lvdXR1LmJlL1FLTGp3Q015djNNP3NpPXVBV2hPOXRueWdobGphSmciLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIklubm92YWNpw7NuIHkgc29zdGVuaWJpbGlkYWQuIildKV0pXSksX3ZtLl9tKDE1KV0pXSldKV0pXSwxKX0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNSJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xLnBuZyIpLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy03In0sW19jKCdwJyx7YXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJFbCBkZXNhcnJvbGxvIGVjb27Ds21pY28gc29zdGVuaWJsZSBidXNjYSBzYXRpc2ZhY2VyIGxhcyBuZWNlc2lkYWRlcyBkZWwgcHJlc2VudGUgc2luIGNvbXByb21ldGVyIGxhIGNhcGFjaWRhZCBkZSBsYXMgZnV0dXJhcyBnZW5lcmFjaW9uZXMsIHBhcmEgc2F0aXNmYWNlciBsYXMgc3V5YXM7IGVzdGUgb2JqZXRpdm8gcGxhbnRlYSBkaWxlbWFzIMOpdGljb3MgaW1wb3J0YW50ZXMsIHF1ZSBpbXBsaWNhIGVxdWlsaWJyYXIgZWwgY3JlY2ltaWVudG8gZWNvbsOzbWljbyBjb24gbGEgcmVzcG9uc2FiaWxpZGFkIGRlIHByZXNlcnZhciBlbCBtZWRpbyBhbWJpZW50ZSB5IHJlc3BldGFyIGxvcyBkZXJlY2hvcyBodW1hbm9zLiAiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3ItMSBwLTQgbWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJMYSBiaW/DqXRpY2EsIGNvbiBzdXMgcHJpbmNpcGlvcyBkZSBqdXN0aWNpYSwgYXV0b25vbcOtYSwgYmVuZWZpY2VuY2lhIHkgbm8gbWFsZWZpY2VuY2lhLCB2aXN0b3MgZW4gbGEgcHJpbWVyYSB1bmlkYWQsIG9mcmVjZSB1biBtYXJjbyDDqXRpY28gcGFyYSBndWlhciBsYXMgZGVjaXNpb25lcyBlY29uw7NtaWNhcyBoYWNpYSB1biBkZXNhcnJvbGxvIHZlcmRhZGVyYW1lbnRlIHNvc3RlbmlibGUuIildKV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InRpdHVsby1zZWd1bmRvIixhdHRyczp7ImlkIjoidF8xXzEiLCJkYXRhLWFvcyI6ImZsaXAtdXAifX0sW19jKCdoMicsW19jKCdzcGFuJyxbX3ZtLl92KCIxLjEiKV0pLF92bS5fdigiIERlZmluaWNpw7NuIGRlbCBkZXNhcnJvbGxvIGVjb27Ds21pY28gc29zdGVuaWJsZSAiKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy03In0sW19jKCdwJyx7YXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJTZSBkZWZpbmUgY29tbyB1biBwcm9jZXNvIGRlIGNyZWNpbWllbnRvIHF1ZSwgYWRlbcOhcyBkZSBnZW5lcmFyIHJpcXVlemEsIGNvbnNpZGVyYSBlbCBiaWVuZXN0YXIgZGUgbGFzIHBlcnNvbmFzIHkgZWwgbWVkaW8gYW1iaWVudGUuIEVzdGUgZW5mb3F1ZSBwcm9tdWV2ZSB1biBlcXVpbGlicmlvIGVudHJlIGxhcyBkaW1lbnNpb25lcyBlY29uw7NtaWNhLCBzb2NpYWwgeSBhbWJpZW50YWwsIGVzZW5jaWFsIHBhcmEgbWVqb3JhciBsYSBjYWxpZGFkIGRlIHZpZGEgc2luIGNvbXByb21ldGVyIGxvcyByZWN1cnNvcyBkZSBmdXR1cmFzIGdlbmVyYWNpb25lcy4gRmVybsOhbmRleiBHYXJjw61hICgyMDEzKSwgc2XDsWFsYSBxdWUgZWwgZGVzYXJyb2xsbyBzb3N0ZW5pYmxlIHNvbG8gZXMgcG9zaWJsZSBzaSBzZSBsb2dyYSB1biBlcXVpbGlicmlvIGVudHJlIGxvcyBmYWN0b3JlcyBxdWUgaW5mbHV5ZW4gZW4gbGEgY2FsaWRhZCBkZSB2aWRhLCBjb21vIGVsIGNyZWNpbWllbnRvIGVjb27Ds21pY28sIGxhIGlndWFsZGFkIGRlIG9wb3J0dW5pZGFkZXMgeSBlbCByZXNwZXRvIGFsIG1lZGlvIGFtYmllbnRlLiBBZGVtw6FzLCBtZW5jaW9uYSBxdWUgbGFzIGVtcHJlc2FzIGRlYmVuIGVuY29udHJhciBmb3JtYXMgZGUgaW50ZWdyYXIgbWVqb3JhcyBlbiB0w6lybWlub3MgZGUgcHJldmVuY2nDs24geSBjdWlkYWRvIGFtYmllbnRhbCwgcXVlIHRhbWJpw6luIGltcHVsc2VuIGxhIHByb2R1Y3RpdmlkYWQgeSBsYSBjYWxpZGFkIGRlIHN1cyBvcGVyYWNpb25lcy4gRXN0ZSBwYXRyw7NuIGRlIGNyZWNpbWllbnRvLCBjb25vY2lkbyBjb21vIHNvc3RlbmlibGUsIGJ1c2NhIGNvbmNpbGlhciBsYSBjb21wZXRpdGl2aWRhZCBlY29uw7NtaWNhIGNvbiBsYSByZXNwb25zYWJpbGlkYWQgc29jaWFsIHkgZWNvbMOzZ2ljYSwgcmVzcG9uZGllbmRvIGEgbGEgZGVtYW5kYSBjcmVjaWVudGUgZGUgY29uc3VtaWRvcmVzIHF1ZSBjb25zaWRlcmFuIGVsIGltcGFjdG8gZWNvbMOzZ2ljbyB5IHNvY2lhbCBlbiBzdXMgZGVjaXNpb25lcyBkZSBjb21wcmEsIGNvbW8gYWwgb3B0YXIgcG9yIHByb2R1Y3RvcyBkZSBiYWpvIGNvbnN1bW8gbyB2ZWjDrWN1bG9zIGjDrWJyaWRvcy4gKEZlcm7DoW5kZXogR2FyY8OtYSwgMjAxMykiKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNSJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS8yLnBuZyIpLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNSJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS8zLnBuZyIpLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy03In0sW19jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiRmVybsOhbmRleiBHYXJjw61hICgyMDEzKSwgZXhwbGljYSBxdWUgdW5hIGVjb25vbcOtYSBzb3N0ZW5pYmxlIGRlYmUgY3JlYXIgdmFsb3IsIHRhbnRvIHBhcmEgZWwgYWNjaW9uaXN0YSBjb21vIHBhcmEgbGEgc29jaWVkYWQgZW4gc3UgY29uanVudG8uIEVzdG8gaW52b2x1Y3JhLCBwb3IgdW4gbGFkbywgYXNlZ3VyYXIgZWwgYWRlY3VhZG8gdXNvIGRlbCBjYXBpdGFsIHBhcmEgbG9zIHByb3BpZXRhcmlvcyB5IGF0ZW5kZXIgbGFzIGRlbWFuZGFzIGRlIGxvcyBjbGllbnRlcyBjb24gcHJlY2lvcyBjb21wZXRpdGl2b3MgeSBwcm9kdWN0b3MgZGUgY2FsaWRhZDsgeSwgcG9yIG90cm8sIGNvbnRyaWJ1aXIgYWwgYmllbmVzdGFyIGRlIGxhIHNvY2llZGFkLCBtZWRpYW50ZSBsYSBjcmVhY2nDs24gZGUgZW1wbGVvLCBlbCBwYWdvIGRlIHNhbGFyaW9zIGp1c3RvcyB5IGVsIGZvcnRhbGVjaW1pZW50byBkZSBsYSBjb25maWFuemEgZW4gbGEgZWNvbm9tw61hIGRlIG1lcmNhZG8uICIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJVbiBkZXNhcnJvbGxvIGVjb27Ds21pY28gc29zdGVuaWJsZSwgYnVzY2EgcXVlIGxhcyBnZW5lcmFjaW9uZXMgZnV0dXJhcyBjdWVudGVuIGNvbiBtYXlvcmVzIG5pdmVsZXMgZGUgcmlxdWV6YSwgcmVudGEgcGVyIGPDoXBpdGEgeSBjYWxpZGFkIGRlIHZpZGEsIGFzZWd1cmFuZG8gYXPDrSB1biBjcmVjaW1pZW50byBxdWUgc2VhIGluY2x1c2l2byB5IHNvc3RlbmlibGUgKEZlcm7DoW5kZXogR2FyY8OtYSwgMjAxMykuIildKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy03In0sW19jKCdwJyx7YXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJGZXJuw6FuZGV6IEdhcmPDrWEgKDIwMTMpLCBlbmZhdGl6YSBxdWUgbGEgc29zdGVuaWJpbGlkYWQgc29jaWFsIGJ1c2NhIHVuIGVxdWlsaWJyaW8gZW50cmUgbGFzIG5lY2VzaWRhZGVzIGVjb27Ds21pY2FzLCBzb2NpYWxlcyB5IG1lZGlvYW1iaWVudGFsZXMsIGRlIGZvcm1hIHF1ZSBsYXMgZW1wcmVzYXMgcHVlZGFuIGNvbnRyaWJ1aXIgYWwgYmllbmVzdGFyIGdlbmVyYWwgc2luIGNvbXByb21ldGVyIGVzdG9zIGZhY3RvcmVzLiBFbiBlc3RhIGRpbWVuc2nDs24gc2UgcmVjb25vY2UsIGFkZW3DoXMsIGxhIGltcG9ydGFuY2lhIGRlIGxhIGVxdWlkYWQgZW4gdHJlcyBuaXZlbGVzOiAiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3ItMSBwLTQgbWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX2MoJ3VsJyx7c3RhdGljQ2xhc3M6Imxpc3RhLXVsIG1iLTMifSxbX2MoJ2xpJyxbX2MoJ2knLHtzdGF0aWNDbGFzczoibGlzdGEtdWxfX3ZpbmV0YSJ9KSxfdm0uX3YoIiBJbnRlcmdlbmVyYWNpb25hbCwgcXVlIGFib2dhIHBvciBjb25zaWRlcmFyIGEgbGFzIGZ1dHVyYXMgZ2VuZXJhY2lvbmVzIGVuIGxhcyBkZWNpc2lvbmVzIGFjdHVhbGVzLiIpXSksX2MoJ2xpJyxbX2MoJ2knLHtzdGF0aWNDbGFzczoibGlzdGEtdWxfX3ZpbmV0YSJ9KSxfdm0uX3YoIkludGVyZ3J1cGFsLCBxdWUgZm9tZW50YSBsYSBpbmNsdXNpw7NuIGRlIGdydXBvcyBkZXNmYXZvcmVjaWRvcyBlbiBsYSB0b21hIGRlIGRlY2lzaW9uZXMuIildKSxfYygnbGknLFtfYygnaScse3N0YXRpY0NsYXNzOiJsaXN0YS11bF9fdmluZXRhIn0pLF92bS5fdigiRW50cmUgcGHDrXNlcywgcHJvbW92aWVuZG8gcmVsYWNpb25lcyBtw6FzIGp1c3RhcyBlbnRyZSBuYWNpb25lcyBkZXNhcnJvbGxhZGFzIHkgZW4gdsOtYXMgZGUgZGVzYXJyb2xsby4iKV0pXSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTUifSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvNC5wbmciKSwiZGF0YS1hb3MiOiJ6b29tLWluIn19KV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTUifSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvNS5wbmciKSwiZGF0YS1hb3MiOiJ6b29tLWluIn19KV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNyJ9LFtfYygncCcse3N0YXRpY0NsYXNzOiJtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIkxhIGRpbWVuc2nDs24gYW1iaWVudGFsIGRlbCBkZXNhcnJvbGxvIHNvc3RlbmlibGUgc2UgY2VudHJhIGVuIHVuYSBnZXN0acOzbiBlZmljaWVudGUgeSByZXNwb25zYWJsZSBkZSBsb3MgcmVjdXJzb3MgbmF0dXJhbGVzLCBjb24gZWwgb2JqZXRpdm8gZGUgcmVkdWNpciBlbCBpbXBhY3RvIG5lZ2F0aXZvIGRlIGxhcyBhY3RpdmlkYWRlcyBwcm9kdWN0aXZhcyBlbiBlbCBlbnRvcm5vLiBGZXJuw6FuZGV6IEdhcmPDrWEgKDIwMTMpLCBkZXN0YWNhIHF1ZSBlc3RhIGRpbWVuc2nDs24gbm8gc29sbyBjb250cmlidXllIGEgcHJlc2VydmFyIGVsIG1lZGlvYW1iaWVudGUgcGFyYSBsYXMgZ2VuZXJhY2lvbmVzIGZ1dHVyYXMsIHNpbm8gcXVlIHRhbWJpw6luIGluY3JlbWVudGEgbGEgcHJvZHVjdGl2aWRhZCB5IGNvbXBldGl0aXZpZGFkIGRlIGxhcyBlbXByZXNhcywgYWwgb3B0aW1pemFyIHN1cyBwcm9jZXNvcy4gTGEgY29udGFtaW5hY2nDs24gYW1iaWVudGFsLCBzZcOxYWxhIGVsIGF1dG9yLCBlcyB1bmEgY29uc2VjdWVuY2lhIGRlIGxhIGluZWZpY2llbmNpYSBlbiBsb3MgcHJvY2Vzb3MgaW5kdXN0cmlhbGVzLCBwb3IgbG8gcXVlIHVuYSBlbXByZXNhIGNvbXByb21ldGlkYSBjb24gbGEgc29zdGVuaWJpbGlkYWQgYW1iaWVudGFsLCBkZWJlIHJlZHVjaXIgc3VzIGVtaXNpb25lcywgbWVqb3JhciBsYSBlZmljaWVuY2lhIGVuIGVsIHVzbyBkZSByZWN1cnNvcyBjb21vIGVsIGFndWEgeSBlbCBzdWVsbywgeSBhZG9wdGFyIHByw6FjdGljYXMgcXVlIG1pbmltaWNlbiBzdSBodWVsbGEgZWNvbMOzZ2ljYS4iKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiQWRlbcOhcywgZWwgY29tcHJvbWlzbyBjb24gbGEgbHVjaGEgY29udHJhIGVsIGNhbWJpbyBjbGltw6F0aWNvIHkgbGEgcHJvdGVjY2nDs24gZGVsIGVudG9ybm8gbmF0dXJhbCwgYWJyZSBudWV2YXMgb3BvcnR1bmlkYWRlcyBlbiBlbCBtZXJjYWRvIGxhYm9yYWwsIHByb21vdmllbmRvIGVtcGxlb3MgcXVlIGNvbnRyaWJ1eWFuIGEgbGEgc29zdGVuaWJpbGlkYWQgeSBsYSByZXNpbGllbmNpYSBtZWRpb2FtYmllbnRhbC4gRXN0YSBkaW1lbnNpw7NuIGVzIGVzZW5jaWFsIHBhcmEgZ2FyYW50aXphciBxdWUgbGFzIGdlbmVyYWNpb25lcyBmdXR1cmFzIGRpc2ZydXRlbiBkZSB1biBlbnRvcm5vIHNhbHVkYWJsZSB5IHJpY28gZW4gcmVjdXJzb3MsIGNyZWFuZG8gYXPDrSB1biBsZWdhZG8gYW1iaWVudGFsIHBvc2l0aXZvLiAoRmVybsOhbmRleiBHYXJjw61hLCAyMDEzKSIpXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTUifSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibXQtNCBtdC1sZy0wIixhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvNi5wbmciKSwiYWx0IjoiIn19KV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1zdHJldGNoIG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctMyBtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiem9vbS1pbi11cCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci13aGl0ZSBib3gtc2hhZG93IHB4LTQgcHktNSBoLTEwMCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im14LWF1dG8gZC1ibG9jayBtYi00IixzdGF0aWNTdHlsZTp7IndpZHRoIjoiOTBweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS83LnN2ZyIpLCJhbHQiOiIifX0pLF9jKCdoNScse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIlJlc2lzdGVuY2lhIGFsIGNhbWJpbyIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCB0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIkxhcyBlbXByZXNhcyB5IGdvYmllcm5vcyBwdWVkZW4gc2VyIHJlYWNpb3MgYSBjYW1iaWFyIG1vZGVsb3MgZWNvbsOzbWljb3MgdHJhZGljaW9uYWxlcyBxdWUgcHJpb3JpemFuIGVsIGJlbmVmaWNpbyBhIGNvcnRvIHBsYXpvLiIpXSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTMgbWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4tdXAifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3Itd2hpdGUgYm94LXNoYWRvdyBweC00IHB5LTUgaC0xMDAifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJteC1hdXRvIGQtYmxvY2sgbWItNCIsc3RhdGljU3R5bGU6eyJ3aWR0aCI6IjkwcHgifSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvOC5zdmciKSwiYWx0IjoiIn19KSxfYygnaDUnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIifSxbX3ZtLl92KCJEZXNpZ3VhbGRhZGVzIGdsb2JhbGVzIildKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIHRleHQtY2VudGVyIn0sW192bS5fdigiRXhpc3RlbiBkaWZlcmVuY2lhcyBzaWduaWZpY2F0aXZhcyBlbiBsYSBjYXBhY2lkYWQgZGUgbGFzIG5hY2lvbmVzIHBhcmEgaW1wbGVtZW50YXIgcHLDoWN0aWNhcyBzb3N0ZW5pYmxlcywgZGViaWRvIGEgbGltaXRhY2lvbmVzIGVjb27Ds21pY2FzIG8gdGVjbm9sw7NnaWNhcy4iKV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy0zIG1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluLXVwIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLXdoaXRlIGJveC1zaGFkb3cgcHgtNCBweS01IGgtMTAwIn0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibXgtYXV0byBkLWJsb2NrIG1iLTQiLHN0YXRpY1N0eWxlOnsid2lkdGgiOiI5MHB4In0sYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzkuc3ZnIiksImFsdCI6IiJ9fSksX2MoJ2g1Jyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIn0sW192bS5fdigiRGVwZW5kZW5jaWEgZGUgbG9zIHJlY3Vyc29zIG5hdHVyYWxlcyIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCB0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIk11Y2hhcyBlY29ub23DrWFzIGRlcGVuZGVuLCBlbiBncmFuIG1lZGlkYSwgZGUgcmVjdXJzb3Mgbm8gcmVub3ZhYmxlcywgbG8gcXVlIGRpZmljdWx0YSBsYSB0cmFuc2ljacOzbiBoYWNpYSB1biBtb2RlbG8gc29zdGVuaWJsZS4iKV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy0zIG1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluLXVwIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLXdoaXRlIGJveC1zaGFkb3cgcHgtNCBweS01IGgtMTAwIn0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibXgtYXV0byBkLWJsb2NrIG1iLTQiLHN0YXRpY1N0eWxlOnsid2lkdGgiOiI5MHB4In0sYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzEwLnN2ZyIpLCJhbHQiOiIifX0pLF9jKCdoNScse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIkNhbWJpbyBjbGltw6F0aWNvIildKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIHRleHQtY2VudGVyIn0sW192bS5fdigiTG9zIGVmZWN0b3MgYWR2ZXJzb3MgZGVsIGNhbWJpbyBjbGltw6F0aWNvLCBjb21vIGZlbsOzbWVub3MgbWV0ZW9yb2zDs2dpY29zIGV4dHJlbW9zIHkgcMOpcmRpZGEgZGUgYmlvZGl2ZXJzaWRhZCwgcmVwcmVzZW50YW4gdW4gb2JzdMOhY3VsbyBjcmVjaWVudGUgcGFyYSBlbCBkZXNhcnJvbGxvIHNvc3RlbmlibGUuIildKV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InRpdHVsby1zZWd1bmRvIixhdHRyczp7ImlkIjoidF8xXzIiLCJkYXRhLWFvcyI6ImZsaXAtdXAifX0sW19jKCdoMicsW19jKCdzcGFuJyxbX3ZtLl92KCIxLjIiKV0pLF92bS5fdigiIFByaW5jaXBpb3MgYmlvw6l0aWNvcyBlbiBlbCB1c28gZGUgbG9zIHJlY3Vyc29zIG5hdHVyYWxlcyAiKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy01In0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzExLnBuZyIpLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy03In0sW19jKCdwJyx7YXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJBZGVtw6FzLCBlbCBhdXRvciBzZcOxYWxhIHF1ZSBlbCBjb25jZXB0byBkZSBcImNvbXByYSByZXNwb25zYWJsZVwiIGltcGxpY2EgdW5hIGFjdGl0dWQgw6l0aWNhIGVuIGVsIHByb2Nlc28gZGUgdG9tYSBkZSBkZWNpc2lvbmVzLCBjb25zaWRlcmFuZG8gbm8gc29sbyBlbCBpbXBhY3RvIG1lZGlvYW1iaWVudGFsLCBzaW5vIHRhbWJpw6luIGxvcyBlZmVjdG9zIHNvY2lhbGVzIHkgZWNvbsOzbWljb3MgZGUgbGFzIGFkcXVpc2ljaW9uZXMuICIpXSksX2MoJ3AnLHthdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIkVzdGUgZW5mb3F1ZSByZXNhbHRhIGxhIGltcG9ydGFuY2lhIGRlIHRvbWFyIGRlY2lzaW9uZXMgcmVzcG9uc2FibGVzLCB0YW50byBlbiBlbCDDoW1iaXRvIGVtcHJlc2FyaWFsIGNvbW8gZW4gZWwgY29uc3VtbyBwZXJzb25hbCwgc3VicmF5YW5kbyBsYSBkaWZlcmVuY2lhIGVudHJlIGNvbnN1bW8gc29zdGVuaWJsZSB5IGNvbXByYSBzb3N0ZW5pYmxlLiIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci0xIHAtNCBtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIk1pZW50cmFzIGVsIGNvbnN1bW8gaGFjZSByZWZlcmVuY2lhIGEgbGFzIGRlY2lzaW9uZXMgZGVsIHVzdWFyaW8gZmluYWwsIGxhIGNvbXByYSBzb3N0ZW5pYmxlIGVzdMOhIHJlbGFjaW9uYWRhIGNvbiBsb3MgcHJvY2Vzb3MgZGUgYWJhc3RlY2ltaWVudG8geSBwcm9kdWNjacOzbiBkZW50cm8gZGUgbGFzIGVtcHJlc2FzLCBsbyBxdWUgcmVxdWllcmUgdW5hIGNvbnNpZGVyYWNpw7NuIG3DoXMgYW1wbGlhIGRlIGxvcyBlZmVjdG9zIGEgbGFyZ28gcGxhem8sIGVuIGxvcyByZWN1cnNvcyBuYXR1cmFsZXMgeSBlbiBsYXMgY29tdW5pZGFkZXMuIChGZXJuw6FuZGV6IEdhcmPDrWEsIDIwMTMpIildKV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy01In0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im10LTQgbXQtbGctMCIsYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzEyLnBuZyIpLCJhbHQiOiIifX0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy1hdXRvIGQtbm9uZSBkLWxnLWJsb2NrIn0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzEzYi5zdmciKSwiYWx0IjoiIn19KV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJ0aXR1bG8tc2VndW5kbyIsYXR0cnM6eyJpZCI6InRfMV8zIiwiZGF0YS1hb3MiOiJmbGlwLXVwIn19LFtfYygnaDInLFtfYygnc3BhbicsW192bS5fdigiMS4zIildKSxfdm0uX3YoIiBDYXNvcyBkZSDDqXhpdG8gZW4gZGVzYXJyb2xsbyBlY29uw7NtaWNvIHNvc3RlbmlibGUiKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJhbmV4b19fdGV4dG8ifSxbX2MoJ3AnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJBbmV4by4gIildKSxfdm0uX3YoIiBDYXNvcyBkZSDDqXhpdG8uIildKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTUgb3JkZXItMSJ9LFtfYygnZmlndXJlJyx7YXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4ifX0sW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvMTQucG5nIiksImFsdCI6IiJ9fSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLTEyIGNvbC1tZC02IGNvbC1sZy0zIG9mZnNldC1sZy0xIn0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2NvbXBvbmVudGVzL21hdGVyaWFsLWNvbXBsZW1lbnRhcmlvLnN2ZyIpLCJhbHQiOiIifX0pXSldKX1dCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}